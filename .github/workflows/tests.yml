name: Tests

on:
  pull_request:
  push:
    branches:
      - master

jobs:
  test:
    env:
      MAKE_PARALLEL: 2
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        ruby: [2.5, 2.6, 2.7]
        botan: [master, 2.12.1]
        rnp: [master, v0.13.0]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v1

    - name: Set environment
      run: |
        . ci/setup-env.inc.sh

    - name: Install build tools
      if: matrix.os == 'macos-latest'
      run: |
        brew install autoconf automake libtool

    - name: Cache
      id: cache
      uses: actions/cache@v1
      with:
        path: ${{ env.CACHE_DIR }}
        key: ${{ matrix.os }}-botan-${{ matrix.botan }}-rnp-${{ matrix.rnp }}-${{ hashFiles('ci/**') }}-${{ hashFiles('.github/workflows/**') }}
    - name: Build cache
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        # botan
        git clone --depth 1 --branch "${{ matrix.botan }}" https://github.com/randombit/botan "${{ runner.temp }}/botan"
        cd "${{ runner.temp }}/botan"
        ./configure.py --prefix="${BOTAN_INSTALL}" --with-debug-info --cxxflags="-fno-omit-frame-pointer"
        make -j${MAKE_PARALLEL} install

        # json-c
        mkdir -p "${{ runner.temp }}/json-c"
        cd "${{ runner.temp }}/json-c"
        wget https://s3.amazonaws.com/json-c_releases/releases/json-c-0.12.1.tar.gz -O json-c.tar.gz
        tar xzf json-c.tar.gz --strip 1
        autoreconf -ivf
        env CFLAGS="-fno-omit-frame-pointer -Wno-implicit-fallthrough -g" ./configure --prefix="$JSONC_INSTALL"
        make -j${MAKE_PARALLEL} install

        # rnp
        git clone https://github.com/rnpgp/rnp "${{ runner.temp }}/rnp"
        cd "${{ runner.temp }}/rnp"
        git checkout "${{ matrix.rnp }}"
        cmake \
          -DCMAKE_BUILD_TYPE=RelWithDebInfo \
          -DBUILD_SHARED_LIBS=yes \
          -DBUILD_TESTING=no \
          -DCMAKE_PREFIX_PATH="$BOTAN_INSTALL;$JSONC_INSTALL" \
          -DCMAKE_INSTALL_PREFIX="${RNP_INSTALL}" \
          .
        make -j${MAKE_PARALLEL} install

    - name: Set up Ruby
      uses: eregon/use-ruby-action@v1.29.0
      with:
        ruby-version: ${{ matrix.ruby }}

    - name: Install bundler
      run:
        gem install bundler

    - name: Workaround macOS SIP
      if: matrix.os == 'macos-latest'
      run: |
        sudo cp -a "$JSONC_INSTALL/lib"/* /usr/local/lib
        sudo cp -a "$BOTAN_INSTALL/lib"/* /usr/local/lib
        sudo cp -a "$RNP_INSTALL/lib"/* /usr/local/lib

    - name: Cache bundle
      id: cache-bundle
      uses: actions/cache@v1
      with:
        path: "${{ env.CACHE_DIR }}/bundle"
        key: ${{ matrix.os }}-ruby-${{ matrix.ruby }}-bundle-${{ hashFiles('ci/**') }}-${{ hashFiles('.github/workflows/**') }}
    - name: Install bundle
      if: steps.cache-bundle.outputs.cache-hit != 'true'
      run: |
        bundle config set path "${{ env.CACHE_DIR }}/bundle"
        bundle install --jobs 4 --retry 3

    - name: Run tests
      run: |
        bundle config set path "${{ runner.workspace }}/bundle"
        bundle install --jobs 4 --retry 3
        export LD_LIBRARY_PATH="$JSONC_INSTALL/lib:$BOTAN_INSTALL/lib:$RNP_INSTALL/lib"
        bundle exec rake

